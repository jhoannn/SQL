#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer, employee, artist, and order data. 

#1. Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT customerid, firstname, lastname, country FROM chinook.customers
WHERE country <> 'USA';

#2.Show only the Customers from Brazil.
SELECT firstname, lastname FROM chinook.customers
WHERE country is 'Brazil';

#3.Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT firstname, lastname, invoiceid, invoicedate, billingcountry FROM chinook.customers AS cust
JOIN chinook.invoices AS inv
ON inv.customerid = cust.customerid
WHERE country is 'Brazil';

#4.Show the Employees who are Sales Agents.
SELECT * FROM chinook.employees
WHERE title = 'Sales Support Agent';

#5.Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT billingcountry FROM chinook.invoices;

#6.Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT emp.firstname, emp.lastname, inv.invoiceid FROM chinook.customers AS cust
JOIN chinook.employees AS emp
ON cust.supportrepid = emp.employeeid
JOIN chinook.invoices AS inv
ON cust.customerid = inv.customerid
ORDER BY emp.employeeid;

#7.Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT total, cust.firstname, cust.lastname , cust.country, emp.firstname, emp.lastname
FROM chinook.customers AS cust
JOIN chinook.employees AS emp
ON cust.supportrepid = emp.employeeid
JOIN chinook.invoices AS inv
ON cust.customerid = inv.customerid;

#8.How many Invoices were there in 2009?
SELECT COUNT(invoiceid)
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';

#9.What are the total sales for 2009?
SELECT SUM(total)
FROM chinook.invoices
WHERE invoicedate LIKE '2009%';

#10.Write a query that includes the purchased track name with each invoice line ID.
SELECT item.invoicelineid, track.name
FROM chinook.invoice_items AS item
JOIN chinook.tracks AS track
ON track.trackid = item.trackid;

#11.Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT item.invoicelineid, artist.name AS artist_name, track.name AS track_title
FROM chinook.Invoice_items AS item
JOIN chinook.tracks AS track
ON track.trackid = item.trackid
JOIN chinook.albums AS album
ON track.albumid = album.albumid
JOIN chinook.artists AS artist
ON album.artistid = artist.artistid;

#12.Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name AS track_name, al.title AS album_name, m.name AS media_type, g.name AS genre
FROM chinook.tracks AS t
JOIN chinook.albums AS al
ON t.albumid = al.albumid
JOIN chinook.media_types AS m
ON t.mediatypeid = m.mediatypeid
JOIN chinook.genres AS g
ON t.genreid = g.genreid;

#13.Show the total sales made by each sales agent.
SELECT ROUND(SUM(i.total), 2) AS total_sales, e.firstname,e.lastname
FROM chinook.customers AS c
JOIN chinook.invoices AS i
ON c.customerid = i.customerid
JOIN chinook.employees AS e
ON c.supportrepid = e.employeeid
GROUP BY e.firstname;

#14.Which sales agent made the most dollars in sales in 2009?
SELECT ROUND(SUM(i.total), 2) AS total_sales, e.firstname,e.lastname
FROM chinook.customers AS c
JOIN chinook.invoices AS i
ON c.customerid = i.customerid
JOIN chinook.employees AS e
ON c.supportrepid = e.employeeid
WHERE i.invoicedate LIKE '2009%'
GROUP BY e.firstname
ORDER BY total_sales DESC
LIMIT 1;

#15.Show the track name, genre, and the playlist name for each distinct track that does not belong to the rock genre.
SELECT DISTINCT t.name AS track_name, g.name AS genre, p.name AS playlist_name
FROM chinook.tracks AS t
JOIN chinook.genres AS g
ON t.genreid = g.genreid
JOIN chinook.playlist_track as pt
ON t.trackid = pt.trackid
JOIN chinook.playlists AS p
ON pt.playlistid = p.playlistid
WHERE g.name NOT LIKE 'rock';
